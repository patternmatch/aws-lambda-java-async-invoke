AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  # See https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  # for more info to see how to tune the lambda function configs based on your use case.
  FirstFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: FirstFunction
      Runtime: java8
      Handler: com.pattermatch.aws.lambda.java.FirstFunction::handleRequest
      Timeout: 60
      MemorySize: 512
      CodeUri: ./target/asyncinvoke.jar
      # Attach policies here to give the function permission to access other AWS resources if needed
      # See: https://github.com/awslabs/serverless-application-model/blob/master/docs/policy_templates.rst
      # eg:
      Policies:
        - LambdaInvokePolicy:
            FunctionName:
              !Ref SecondFunction
  SecondFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SecondFunction
      Runtime: java8
      Handler: com.pattermatch.aws.lambda.java.SecondFunction::handleRequest
      Timeout: 60
      MemorySize: 512
      CodeUri: ./target/asyncinvoke.jar
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref AsyncInvokeErrorsTopic
  AsyncInvokeErrorsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "AsyncInvokeErrorsTopic"
      Subscription:
        - Endpoint: your.email@email.com
          Protocol: "email"